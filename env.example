# EAS SDK Environment Configuration
# Copy this file to .env and fill in your actual values
# ⚠️ WARNING: NEVER use these example values in production!

# =============================================================================
# REQUIRED: Your private key (keep this secret!)
# =============================================================================
# Generate secure private key with: python -c "from eth_account import Account; print(Account.create().key.hex())"
# SECURITY: Use placeholder pattern below, replace with your actual key
PRIVATE_KEY=YOUR_PRIVATE_KEY_HERE_REPLACE_WITH_REAL_64_HEX_CHARS

# Alternative format (recommended):
EAS_PRIVATE_KEY=0xYOUR_PRIVATE_KEY_HERE_REPLACE_WITH_REAL_64_HEX_CHARS

# =============================================================================
# REQUIRED: Your wallet address
# =============================================================================
# Your wallet's public address (must match the private key above)
FROM_ACCOUNT=0xYOUR_ADDRESS_HERE_REPLACE_WITH_REAL_40_HEX_CHARS

# Alternative format (recommended):
EAS_FROM_ACCOUNT=0xYOUR_ADDRESS_HERE_REPLACE_WITH_REAL_40_HEX_CHARS

# =============================================================================
# OPTIONAL: Network configuration (overrides defaults)
# =============================================================================
# Network to use: ethereum, base, arbitrum, optimism, polygon, sepolia, base-sepolia, etc.
# SECURITY: Start with testnets for development
NETWORK=base-sepolia
EAS_CHAIN=base-sepolia

# Custom RPC URL (optional - will override network defaults)
# SECURITY: Only use trusted RPC providers - SDK validates against allowlist
RPC_URL=https://sepolia.base.org
EAS_RPC_URL=https://sepolia.base.org

# =============================================================================
# OPTIONAL: Custom contract configuration (overrides network defaults)
# =============================================================================
# Custom EAS contract address (optional)
# CONTRACT_ADDRESS=0xC2679fBD37d54388Ce493F1DB75320D236e1815e

# Custom chain ID (optional)
# CHAIN_ID=11155111

# =============================================================================
# OPTIONAL: Example attestation data (for testing)
# =============================================================================
# Example schema UID (optional - used in examples)
# EXAMPLE_SCHEMA=0x071de830af40cf7e1035554968b97f9ae2441e8b6a15f02217aa3f46dad85d86

# Example recipient address (optional - used in examples)
# EXAMPLE_RECIPIENT=0x1e3de6aE412cA218FD2ae3379750388D414532dc

# =============================================================================
# ENVIRONMENT SECURITY (IMPORTANT!)
# =============================================================================
# Set the environment type to enable/disable certain security features
EAS_ENVIRONMENT=development  # Options: development, testing, production

# =============================================================================
# SECURITY REQUIREMENTS:
# =============================================================================
# 1. NEVER commit your .env file to version control (.gitignore it!)
# 2. Set proper file permissions: chmod 600 .env
# 3. Keep your private key secure and never share it
# 4. Use test networks (sepolia, base-sepolia) for development
# 5. Only use mainnet when you're ready for production
# 6. Consider using a dedicated wallet for testing
# 7. Use hardware wallets for mainnet operations
# 8. Replace ALL placeholder values with real ones
# 9. Validate your private key corresponds to your address
# 10. Use trusted RPC providers only (SDK validates against allowlist)

# =============================================================================
# SECURITY VALIDATION:
# =============================================================================
# The SDK automatically validates:
# - Private key format and cryptographic validity
# - Address format and checksum (EIP-55)
# - RPC URL against trusted provider allowlist
# - Environment variable injection patterns
# - Chain ID consistency
# - Contract address verification